name: Terraform CI/CD

on:
  push:
    branches:
      - main  # Apni branch ka naam adjust karein agar zaroorat ho

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0  # Apni desired Terraform version yahan set karein

      # Debug Step: AWS Region aur Keys ko Confirm karein (Secrets ko file mein likhein bina masking ke)
      - name: Debug AWS Region and Keys
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" > temp_env_file
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> temp_env_file
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> temp_env_file
          cat temp_env_file  # Ye secrets ko bina masking ke display karega debugging ke liye (use carefully)

      # Terraform Init Step with AWS Region Debugging
      - name: Terraform Init with AWS Region Debugging
        run: |
          cd terraform/environment/development
          terraform init -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                         -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                         -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                         -var="aws_region=${{ secrets.AWS_REGION }}"  # AWS_REGION ko hardcode karne ke bajaaye secret use karein

      # Terraform Plan Step
      - name: Terraform Plan
        run: |
          cd terraform/environment/development
          terraform plan -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                         -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                         -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                         -var="aws_region=${{ secrets.AWS_REGION }}"

      # Terraform Destroy Step
      - name: Terraform Destroy
        run: |
          cd terraform/environment/development
          terraform destroy -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                             -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                             -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                             -var="aws_region=${{ secrets.AWS_REGION }}"
