name: Terraform CI/CD

on:
  push:
    branches:
      - main  # Adjust as necessary for your workflow

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0  # Use your desired Terraform version

      # Debug Step 1: Print the Secrets (without masking) to a temp file
      - name: Debug Secrets (Without Masking)
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" > temp_env_file
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> temp_env_file
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> temp_env_file
          cat temp_env_file  # This will display the contents without masking for debugging
          
      # Terraform Init with hardcoded region for debugging
      - name: Terraform Init with Hardcoded Region
        run: |
          cd terraform/environment/development
          terraform init -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                         -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                         -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                         -var="aws_region=me-central-1"  # Hardcoded region for testing

      # Terraform Plan
      - name: Terraform Plan
        run: |
          cd terraform/environment/development
          terraform plan -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                         -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                         -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                         -var="aws_region=${{ secrets.AWS_REGION }}"

      # Uncomment this section to apply the configuration (optional)
      # - name: Terraform Apply
      #   run: |
      #     cd terraform/environment/development
      #     terraform apply -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
      #                      -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
      #                      -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
      #                      -var="aws_region=${{ secrets.AWS_REGION }}"

      # Terraform Destroy
      - name: Terraform Destroy
        run: |
          cd terraform/environment/development
          terraform destroy -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
                             -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                             -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                             -var="aws_region=${{ secrets.AWS_REGION }}"
